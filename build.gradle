import groovyx.net.http.RESTClient
import groovy.json.JsonSlurper
import static groovyx.net.http.ContentType.JSON

buildscript {
    ext {
        springBootVersion = '1.2.3.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'au.com.dius:pact-jvm-provider-gradle_2.11:2.1.13'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }

    ext.pactBrokerAddress = 'http://localhost:9000/'
}

subprojects {
    apply plugin: 'spring-boot'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web")
        testCompile("org.springframework.boot:spring-boot-starter-test")
        testCompile("au.com.dius:pact-jvm-consumer-junit_2.11:2.1.13")
    }
}

project(':microservices-pact-consumer') {
    jar {
        baseName = 'microservices-pact-consumer'
        version = '0.0.1-SNAPSHOT'
    }

    task publishPacts << {
        def pactDir = new File("${project.projectDir}/target/pacts/")
        pactDir.eachFile { pactFile ->
            def pact = new JsonSlurper().parseText(pactFile.text)
            String brokerPath = "/pacts/provider/${pact.provider.name}/consumer/${pact.consumer.name}/version/${project.version}"
            println "Publishing pact: " + brokerPath

            def client = new RESTClient( pactBrokerAddress )
            def resp = client.put(
                    path : brokerPath,
                    requestContentType: JSON,
                    body : pact
            )
            println 'Attempt to send pact to broker returned status code: ' + resp.status
        }
    }
}

project(':microservices-pact-provider') {
    apply plugin: 'au.com.dius.pact'

    jar {
        baseName = 'microservices-pact-provider'
        version = '0.0.1-SNAPSHOT'
    }

    /*
     * Download file from Pact Broker
     */
    task setup << {
        ant.mkdir(dir: "${project.projectDir}/target/pacts")
        ant.get(src: pactBrokerAddress + "pacts/provider/Foo_Provider/consumer/Foo_Consumer/version/1.0.0",
                dest: "${project.projectDir}/target/pacts/Foo_Consumer-Foo_Provider.json")
    }

    pact {
        serviceProviders {
            fooProvider {
                startProviderTask = 'setup'
                hasPactWith('fooConsumer') {
                    pactFile = file("${project.projectDir}/target/pacts/Foo_Consumer-Foo_Provider.json")
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
